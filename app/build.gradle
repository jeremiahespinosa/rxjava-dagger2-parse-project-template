apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

def final appConfig = [
        "id": "com.app.id",

        "versions": [
                "support_library": "24.0.0",
                "leak_canary": "1.4-beta2",
                "dagger": "2.5",
                "butterknife": "8.1.0",
                "stetho": "1.3.1",
        ],

        production: [
                "use_log": "false",
                "parse_server_url": "\"https://xxx.com\"",
                "parse_app_id": "\"parse_app_id\"",
                "parse_android_key": "\"parse_android_key\"",
                "manifest_placeholders": [
                        "app_id": "com.app.id"
                ]
        ],

        staging: [
                "use_log": "true",
                "parse_server_url": "\"https://xxx.com\"",
                "parse_app_id": "\"parse_app_id\"",
                "parse_android_key": "\"parse_android_key\"",
                "manifest_placeholders": [
                        "app_id": "com.app.id"
                ]
        ],

        development: [
                "use_log": "true",
                "parse_server_url": "\"https://xxx.com\"",
                "parse_app_id": "\"parse_app_id\"",
                "parse_android_key": "\"parse_android_key\"",
                "manifest_placeholders": [
                        "app_id": "com.app.id"
                ]
        ]
]

def generateVersionCode() {
    try {
        def cmd = 'git rev-list --count HEAD'
        cmd.execute().text.trim().toInteger()
    } catch (ignored) {
        1
    }
}

def generateVersionName() {
    try {
        def cmd = 'git describe --tags --abbrev=0'
        cmd.execute().text.trim()
    } catch (ignored) {
        "1.0"
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "$appConfig.id"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "0.0.0"

        resConfigs "en", "pt-rBR"
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries true
        incremental true
        dexInProcess = true
    }

//    signingConfigs {
//        release {
//            storeFile file("xyz.jks")
//            storePassword "xyz"
//            keyAlias "xyz"
//            keyPassword "xyz"
//        }
//    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

//            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        debug {
//            signingConfig signingConfigs.release
//        }
    }

    productFlavors {
        def BOOLEAN = "boolean"
        def STRING = "String"

        def USE_LOG = "USE_LOG"
        def PARSE_SERVER_URL = "PARSE_SERVER_URL"
        def PARSE_APP_ID = "PARSE_APP_ID"
        def PARSE_ANDROID_KEY = "PARSE_ANDROID_KEY"

        production {
            buildConfigField BOOLEAN, USE_LOG, "$appConfig.production.use_log"
            buildConfigField STRING, PARSE_SERVER_URL, "$appConfig.production.parse_server_url"
            buildConfigField STRING, PARSE_APP_ID, "$appConfig.production.parse_app_id"
            buildConfigField STRING, PARSE_ANDROID_KEY, "$appConfig.production.parse_android_key"

            manifestPlaceholders = appConfig.production.manifest_placeholders
        }

        staging {
            buildConfigField BOOLEAN, USE_LOG, "$appConfig.staging.use_log"
            buildConfigField STRING, PARSE_SERVER_URL, "$appConfig.staging.parse_server_url"
            buildConfigField STRING, PARSE_APP_ID, "$appConfig.staging.parse_app_id"
            buildConfigField STRING, PARSE_ANDROID_KEY, "$appConfig.staging.parse_android_key"

            manifestPlaceholders = appConfig.staging.manifest_placeholders
        }

        development {
            buildConfigField BOOLEAN, USE_LOG, "$appConfig.development.use_log"

            buildConfigField STRING, PARSE_SERVER_URL, "$appConfig.development.parse_server_url"
            buildConfigField STRING, PARSE_APP_ID, "$appConfig.development.parse_app_id"
            buildConfigField STRING, PARSE_ANDROID_KEY, "$appConfig.development.parse_android_key"
            manifestPlaceholders = appConfig.development.manifest_placeholders
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

android.applicationVariants.all { variant ->
    def mergedFlavor = variant.mergedFlavor

    if (!variant.buildType.isDebuggable()) {
        mergedFlavor.versionCode = generateVersionCode()
        mergedFlavor.versionName = generateVersionName() + "." + generateVersionCode()
    }
}

repositories {
    // For ButterKnife
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.parse:parse-android:1.13.1'

    compile "com.android.support:appcompat-v7:$appConfig.versions.support_library"
    compile "com.android.support:design:$appConfig.versions.support_library"
    compile "com.android.support:cardview-v7:$appConfig.versions.support_library"
    compile "com.android.support:recyclerview-v7:$appConfig.versions.support_library"

    compile "com.google.dagger:dagger:$appConfig.versions.dagger"
    apt "com.google.dagger:dagger-compiler:$appConfig.versions.dagger"

    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'de.hdodenhof:circleimageview:2.0.0'

    compile "com.jakewharton:butterknife:$appConfig.versions.butterknife"
    apt "com.jakewharton:butterknife-compiler:$appConfig.versions.butterknife"

    debugCompile "com.facebook.stetho:stetho:$appConfig.versions.stetho"
    debugCompile "com.facebook.stetho:stetho-okhttp3:$appConfig.versions.stetho"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$appConfig.versions.leak_canary"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$appConfig.versions.leak_canary"
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
    }
}